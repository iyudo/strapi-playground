/**
 * auth controller
 */

import { factories } from '@strapi/strapi'
import axios from 'axios';
import jwt from 'jsonwebtoken';

const AUTH0_DOMAIN = process.env.AUTH0_DOMAIN;
const AUTH0_CLIENT_ID = process.env.AUTH0_CLIENT_ID;
const AUTH0_CLIENT_SECRET = process.env.AUTH0_CLIENT_SECRET;
const AUTH0_CALLBACK_URL = process.env.AUTH0_CALLBACK_URL;

export default factories.createCoreController('api::auth.auth', ({ strapi }) => ({
    async sso(ctx) {
        const { authorization } = ctx.request.headers;

        if (!authorization) {
            const authUrl = `https://${AUTH0_DOMAIN}/authorize?response_type=code&client_id=${AUTH0_CLIENT_ID}&redirect_uri=${AUTH0_CALLBACK_URL}&scope=openid+email+profile`;
            return ctx.redirect(authUrl);
        }

        ctx.redirect(`http://localhost:1337/admin`);
    },

    async callback(ctx) {
        try {
            console.log('callback being called');
            const { code } = ctx.query;

            if (!code) {
                return ctx.badRequest('Authorization code is missing');
            }


            const tokenResponse = await axios.post('https://' + AUTH0_DOMAIN + '/oauth/token', {
                client_id: AUTH0_CLIENT_ID,
                client_secret: AUTH0_CLIENT_SECRET,
                code: code,
                grant_type: 'authorization_code',
                redirect_uri: 'http://localhost:1337/api/auth/callback',
            });

            const { id_token } = tokenResponse.data;
            
            // console.log(id_token);


            const decodedToken = JSON.parse(
                Buffer.from(id_token.split('.')[1], 'base64').toString('utf-8')
            );
            console.log(decodedToken);
            const { email, nickname } = decodedToken;

            // console.log(email);

            if (!email) {
                return ctx.badRequest('User email not found in token');
            }


            var users = await strapi.entityService.findMany('admin::user', {
                filters: { email },
            });

            var user;

            if (!users || users.length === 0) {
                user = await strapi.entityService.create('admin::user', {
                    data: {
                        email,
                        firstname: nickname,
                        lastname: nickname,
                        username: email.split('@')[0],
                        // password: 'AutoGeneratedPassword123',
                        // roles: [1],
                        roles: 1,
                        isActive: true,
                    },
                });
            } else {
                user = users[0];
            }
            console.log(user);

            // const jwt = strapi.plugins['users-permissions'].services.jwt.issue({ email });
            const token = await strapi.admin.services.token.createJwtToken(user);

            console.log(token);
            ctx.redirect(`http://localhost:1337/admin`);
        } catch (error) {
            console.error(error);
            ctx.internalServerError('An error occurred during SSO callback');
        }
    },
}));
